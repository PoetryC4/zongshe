<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title></title>
    <script src="./js/jquery.min.js"></script>
    <script src="./js/echarts.min.js"></script>
    <script>
            var ts_code='000040.SZ';
            var prd_dur='';
        function setTsCode(stockId){
            ts_code = stockId;
        }
        function setPrdDur(dur){
            prd_dur = dur;
        }
        $(document).ready(function () {
        setTimeout(()=>{

            var stData;
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function() {
                if (true) {
                    //stData = JSON.parse(this.responseText);
                    stData = "[[6.22, 6.5, 6.5, 5.81, \"2022-08-24\"], [6.64, 5.96, 6.64, 5.85, \"2022-08-25\"], [5.62, 5.36, 5.89, 5.36, \"2022-08-26\"], [4.96, 4.95, 5.16, 4.9, \"2022-08-29\"], [4.94, 4.53, 5.01, 4.51, \"2022-08-30\"], [4.47, 4.18, 4.51, 4.16, \"2022-08-31\"], [4.18, 4.12, 4.23, 4.08, \"2022-09-01\"], [4.12, 4.22, 4.27, 4.12, \"2022-09-02\"], [4.21, 4.27, 4.37, 4.18, \"2022-09-05\"], [4.31, 4.43, 4.48, 4.19, \"2022-09-06\"], [4.38, 4.65, 4.82, 4.35, \"2022-09-07\"], [4.63, 4.49, 4.65, 4.48, \"2022-09-08\"], [4.46, 4.36, 4.53, 4.31, \"2022-09-09\"], [4.38, 4.31, 4.43, 4.27, \"2022-09-13\"], [4.22, 4.22, 4.32, 4.18, \"2022-09-14\"], [4.25, 4.1, 4.27, 4.03, \"2022-09-15\"], [4.1, 3.98, 4.15, 3.98, \"2022-09-16\"], [3.97, 3.95, 4.02, 3.87, \"2022-09-19\"], [3.95, 4.08, 4.1, 3.95, \"2022-09-20\"], [4.09, 4.12, 4.13, 3.99, \"2022-09-21\"], [4.08, 4.09, 4.17, 4.06, \"2022-09-22\"], [4.09, 3.98, 4.16, 3.96, \"2022-09-23\"], [3.95, 3.93, 4.02, 3.9, \"2022-09-26\"], [3.96, 4.03, 4.08, 3.83, \"2022-09-27\"], [4.02, 3.82, 4.08, 3.81, \"2022-09-28\"], [3.82, 3.72, 3.92, 3.71, \"2022-09-29\"], [3.88, 4.09, 4.09, 3.88, \"2022-09-30\"], [4.1, 4.28, 4.41, 4.02, \"2022-10-10\"], [4.2, 4.17, 4.2, 4.05, \"2022-10-11\"], [4.14, 4.28, 4.28, 4.09, \"2022-10-12\"], [4.24, 4.33, 4.37, 4.15, \"2022-10-13\"], [4.34, 4.32, 4.4, 4.26, \"2022-10-14\"], [4.24, 4.31, 4.35, 4.15, \"2022-10-17\"], [4.3, 4.24, 4.35, 4.22, \"2022-10-18\"], [4.21, 4.15, 4.25, 4.15, \"2022-10-19\"], [4.14, 4.05, 4.18, 4.05, \"2022-10-20\"], [4.08, 4.13, 4.33, 4.07, \"2022-10-21\"], [4.14, 3.98, 4.18, 3.94, \"2022-10-24\"], [4.0, 4.03, 4.04, 3.83, \"2022-10-25\"], [4.01, 4.0, 4.06, 3.97, \"2022-10-26\"], [3.97, 3.9, 4.09, 3.88, \"2022-10-27\"], [3.9, 3.71, 3.91, 3.7, \"2022-10-28\"], [3.68, 3.68, 3.74, 3.65, \"2022-10-31\"], [3.68, 3.78, 3.78, 3.66, \"2022-11-01\"], [3.76, 3.78, 3.81, 3.74, \"2022-11-02\"], [3.75, 3.82, 3.83, 3.74, \"2022-11-03\"], [3.81, 3.92, 3.96, 3.77, \"2022-11-04\"], [3.91, 3.96, 3.98, 3.89, \"2022-11-07\"], [3.96, 3.93, 3.99, 3.92, \"2022-11-08\"], [3.94, 3.97, 3.99, 3.92, \"2022-11-09\"], [3.91, 3.91, 3.97, 3.9, \"2022-11-10\"], [4.0, 3.92, 4.02, 3.91, \"2022-11-11\"], [3.93, 3.88, 3.96, 3.86, \"2022-11-14\"], [3.91, 4.03, 4.05, 3.87, \"2022-11-15\"], [4.04, 3.97, 4.1, 3.95, \"2022-11-16\"], [3.95, 3.95, 3.99, 3.91, \"2022-11-17\"], [3.97, 3.91, 3.98, 3.9, \"2022-11-18\"], [3.91, 3.87, 3.91, 3.83, \"2022-11-21\"], [3.88, 3.79, 3.91, 3.76, \"2022-11-22\"], [3.8, 3.89, 3.91, 3.75, \"2022-11-23\"], [3.89, 3.97, 4.04, 3.87, \"2022-11-24\"], [3.97, 3.91, 3.98, 3.88, \"2022-11-25\"], [3.88, 3.96, 3.97, 3.8, \"2022-11-28\"], [3.99, 4.0, 4.02, 3.94, \"2022-11-29\"], [4.0, 4.12, 4.15, 3.97, \"2022-11-30\"], [4.12, 4.06, 4.13, 4.03, \"2022-12-01\"], [4.05, 4.06, 4.09, 4.01, \"2022-12-02\"], [4.08, 4.11, 4.13, 4.06, \"2022-12-05\"], [4.11, 4.04, 4.13, 4.03, \"2022-12-06\"], [4.04, 4.0, 4.07, 3.99, \"2022-12-07\"], [4.0, 3.98, 4.03, 3.96, \"2022-12-08\"], [3.98, 3.98, 4.07, 3.97, \"2022-12-09\"], [3.96, 3.89, 3.97, 3.86, \"2022-12-12\"], [3.88, 3.86, 3.91, 3.85, \"2022-12-13\"], [3.88, 3.84, 3.89, 3.81, \"2022-12-14\"], [3.83, 3.87, 3.88, 3.8, \"2022-12-15\"], [3.86, 3.8, 3.88, 3.8, \"2022-12-16\"], [3.8, 3.7, 3.8, 3.67, \"2022-12-19\"], [3.68, 3.79, 3.83, 3.65, \"2022-12-20\"], [3.79, 3.72, 3.79, 3.7, \"2022-12-21\"], [3.73, 3.63, 3.75, 3.61, \"2022-12-22\"], [3.61, 3.61, 3.67, 3.59, \"2022-12-23\"], [3.63, 3.72, 3.73, 3.63, \"2022-12-26\"], [3.74, 3.71, 3.74, 3.67, \"2022-12-27\"], [3.69, 3.72, 3.79, 3.65, \"2022-12-28\"], [3.69, 3.64, 3.71, 3.63, \"2022-12-29\"], [3.63, 3.67, 3.71, 3.63, \"2022-12-30\"], [3.66, 3.76, 3.77, 3.65, \"2023-01-03\"], [3.77, 3.76, 3.78, 3.74, \"2023-01-04\"], [3.77, 4.03, 4.14, 3.72, \"2023-01-05\"], [3.98, 4.43, 4.43, 3.92, \"2023-01-06\"], [4.67, 4.51, 4.87, 4.5, \"2023-01-09\"], [4.33, 4.42, 4.63, 4.32, \"2023-01-10\"], [4.37, 4.37, 4.55, 4.28, \"2023-01-11\"], [4.35, 4.19, 4.38, 4.17, \"2023-01-12\"], [4.26, 4.14, 4.29, 4.09, \"2023-01-13\"], [4.16, 4.1, 4.18, 4.08, \"2023-01-16\"], [4.08, 4.08, 4.16, 4.05, \"2023-01-17\"], [4.11, 4.27, 4.48, 4.08, \"2023-01-18\"], [4.2, 4.15, 4.25, 4.13, \"2023-01-19\"], [4.18, 4.25, 4.3, 4.16, \"2023-01-20\"], [4.3, 4.26, 4.34, 4.23, \"2023-01-30\"], [4.19, 4.38, 4.41, 4.06, \"2023-01-31\"], [4.34, 4.4, 4.4, 4.29, \"2023-02-01\"], [4.37, 4.29, 4.38, 4.25, \"2023-02-02\"], [4.27, 4.27, 4.28, 4.19, \"2023-02-03\"], [4.26, 4.26, 4.3, 4.21, \"2023-02-06\"], [4.26, 4.36, 4.4, 4.25, \"2023-02-07\"], [4.33, 4.3, 4.34, 4.28, \"2023-02-08\"], [4.27, 4.31, 4.38, 4.22, \"2023-02-09\"], [4.29, 4.55, 4.73, 4.26, \"2023-02-10\"], [4.61, 4.74, 4.92, 4.55, \"2023-02-13\"], [4.78, 4.53, 4.82, 4.52, \"2023-02-14\"], [4.54, 4.55, 4.61, 4.47, \"2023-02-15\"], [4.51, 4.34, 4.53, 4.28, \"2023-02-16\"], [4.35, 4.29, 4.39, 4.29, \"2023-02-17\"], [4.28, 4.34, 4.35, 4.26, \"2023-02-20\"], [4.34, 4.37, 4.38, 4.32, \"2023-02-21\"], [4.36, 4.31, 4.36, 4.28, \"2023-02-22\"], [4.31, 4.31, 4.35, 4.27, \"2023-02-23\"], [4.32, 4.23, 4.34, 4.21, \"2023-02-24\"], [4.23, 4.23, 4.28, 4.2, \"2023-02-27\"], [4.25, 4.28, 4.28, 4.23, \"2023-02-28\"], [4.28, 4.29, 4.29, 4.25, \"2023-03-01\"], [4.29, 4.27, 4.33, 4.26, \"2023-03-02\"], [4.27, 4.29, 4.29, 4.23, \"2023-03-03\"], [4.28, 4.29, 4.31, 4.23, \"2023-03-06\"], [4.29, 4.16, 4.29, 4.16, \"2023-03-07\"], [4.16, 4.2, 4.21, 4.14, \"2023-03-08\"], [4.2, 4.16, 4.2, 4.16, \"2023-03-09\"], [4.15, 4.09, 4.16, 4.09, \"2023-03-10\"], [4.08, 4.08, 4.11, 4.02, \"2023-03-13\"], [4.08, 4.02, 4.09, 3.94, \"2023-03-14\"], [4.03, 4.07, 4.08, 4.03, \"2023-03-15\"], [4.05, 3.99, 4.06, 3.98, \"2023-03-16\"], [4.01, 4.0, 4.03, 3.97, \"2023-03-17\"], [3.98, 3.96, 4.01, 3.96, \"2023-03-20\"], [3.97, 4.01, 4.01, 3.94, \"2023-03-21\"], [4.01, 4.01, 4.04, 3.99, \"2023-03-22\"], [4.0, 3.98, 4.0, 3.96, \"2023-03-23\"], [3.99, 4.04, 4.07, 3.96, \"2023-03-24\"], [4.05, 3.98, 4.06, 3.96, \"2023-03-27\"], [4.0, 3.91, 4.01, 3.89, \"2023-03-28\"], [3.91, 3.87, 3.93, 3.86, \"2023-03-29\"], [3.87, 3.9, 3.9, 3.83, \"2023-03-30\"], [3.9, 3.91, 3.92, 3.88, \"2023-03-31\"], [3.91, 3.96, 3.99, 3.9, \"2023-04-03\"], [3.97, 3.89, 3.97, 3.87, \"2023-04-04\"], [3.88, 3.85, 3.89, 3.83, \"2023-04-06\"], [3.84, 3.89, 3.89, 3.83, \"2023-04-07\"], [3.9, 3.93, 3.94, 3.88, \"2023-04-10\"], [3.92, 3.93, 3.94, 3.87, \"2023-04-11\"], [3.92, 4.0, 4.02, 3.91, \"2023-04-12\"], [3.99, 4.32, 4.39, 3.98, \"2023-04-13\"], [4.24, 4.2, 4.31, 4.17, \"2023-04-14\"], [4.18, 4.2, 4.25, 4.16, \"2023-04-17\"], [4.18, 4.11, 4.21, 4.08, \"2023-04-18\"], [4.1, 4.1, 4.15, 4.07, \"2023-04-19\"], [4.1, 4.04, 4.11, 3.98, \"2023-04-20\"], [4.01, 3.88, 4.04, 3.88, \"2023-04-21\"], [3.9, 4.05, 4.13, 3.89, \"2023-04-24\"], [4.01, 4.06, 4.12, 3.98, \"2023-04-25\"], [4.05, 4.15, 4.2, 4.01, \"2023-04-26\"], [4.11, 4.09, 4.15, 4.05, \"2023-04-27\"], [4.16, 4.15, 4.24, 4.11, \"2023-04-28\"], [4.11, 4.24, 4.26, 4.11, \"2023-05-04\"], [4.21, 4.2, 4.23, 4.16, \"2023-05-05\"], [4.21, 4.17, 4.26, 4.16, \"2023-05-08\"], [4.14, 4.11, 4.21, 4.08, \"2023-05-09\"], [4.11, 4.16, 4.2, 4.09, \"2023-05-10\"], [4.15, 4.22, 4.24, 4.15, \"2023-05-11\"], [4.22, 4.18, 4.25, 4.16, \"2023-05-12\"], [4.18, 4.22, 4.25, 4.17, \"2023-05-15\"], [4.22, 4.29, 4.36, 4.14, \"2023-05-16\"], [4.27, 4.27, 4.28, 4.2, \"2023-05-17\"], [4.27, 4.18, 4.27, 4.17, \"2023-05-18\"], [4.18, 4.13, 4.18, 4.11, \"2023-05-19\"], [4.12, 4.32, 4.35, 4.1, \"2023-05-22\"], [4.32, 4.21, 4.33, 4.2, \"2023-05-23\"], [4.23, 4.43, 4.58, 4.19, \"2023-05-24\"], [4.35, 4.69, 4.87, 4.34, \"2023-05-25\"], [4.63, 4.45, 4.64, 4.43, \"2023-05-26\"], [4.43, 4.39, 4.5, 4.35, \"2023-05-29\"], [4.4, 4.57, 4.76, 4.39, \"2023-05-30\"], [4.48, 4.44, 4.53, 4.41, \"2023-05-31\"], [4.35, 4.14, 4.37, 4.12, \"2023-06-01\"], [4.12, 4.17, 4.18, 4.05, \"2023-06-02\"], [4.18, 4.13, 4.2, 4.11, \"2023-06-05\"], [4.12, 4.01, 4.12, 4.0, \"2023-06-06\"], [4.01, 4.02, 4.04, 3.97, \"2023-06-07\"], [4.01, 3.99, 4.05, 3.95, \"2023-06-08\"], [3.97, 4.07, 4.12, 3.96, \"2023-06-09\"], [4.09, 4.05, 4.09, 4.03, \"2023-06-12\"], [4.03, 4.06, 4.09, 4.02, \"2023-06-13\"], [4.05, 4.03, 4.06, 3.98, \"2023-06-14\"], [4.03, 4.08, 4.08, 4.0, \"2023-06-15\"], [4.07, 4.07, 4.08, 4.04, \"2023-06-16\"], [4.08, 4.03, 4.08, 4.01, \"2023-06-19\"], [4.02, 3.97, 4.02, 3.97, \"2023-06-20\"], [3.95, 3.97, 4.04, 3.95, \"2023-06-21\"], [4.210735321044922, 4.204244136810303, 4.288971424102783, 4.151042938232422, \"2023-06-23\"], [4.194896697998047, 4.176817893981934, 4.258089065551758, 4.1228814125061035, \"2023-06-26\"], [4.181342601776123, 4.178372859954834, 4.250028610229492, 4.102560520172119, \"2023-06-27\"], [4.160433769226074, 4.168675899505615, 4.239800930023193, 4.099515438079834, \"2023-06-28\"], [4.150491714477539, 4.136111736297607, 4.2294602394104, 4.08571195602417, \"2023-06-29\"], [4.136796951293945, 4.132274150848389, 4.205689907073975, 4.064692497253418, \"2023-06-30\"], [4.138472080230713, 4.117719650268555, 4.202234745025635, 4.067983627319336, \"2023-07-03\"]]"
                    stData = JSON.parse(stData);
                    let getDailyStockR = []
                    let row = []
                    // for(let i=0;i<stData.getDailyStock.length;i++) {
                    for(let i=0;i<stData.length;i++) {
                        row = []
                        row.push(stData[i][4])
                        row.push(stData[i][0])
                        row.push(stData[i][1])
                        row.push(stData[i][3])
                        row.push(stData[i][2])
                        //console.log(row)
                        getDailyStockR.push(row)
                    }
                    stData = getDailyStockR
            var chartDom = document.getElementById('main');
            var myChart = echarts.init(chartDom);
            var option;

            const upColor = '#ec0000';
            const upBorderColor = '#8A0000';
            const downColor = '#00da3c';
            const downBorderColor = '#008F28';
            // Each item: open，close，lowest，highest
            const data0 = splitData(stData);
            function splitData(rawData) {
                const categoryData = [];
                const values = [];
                for (var i = 0; i < rawData.length; i++) {
                    categoryData.push(rawData[i].splice(0, 1)[0]);
                    values.push(rawData[i]);
                }
                return {
                    categoryData: categoryData,
                    values: values
                };
            }
            function compareDate(input) {
                const timeElapsed = Date.now();
                const today = new Date(timeElapsed);
                var dateIn = new Date(input);
                return dateIn.getTime()>today.getTime();
            }
            function calculateMA(dayCount) {
                var result = [];
                for (var i = 0, len = data0.values.length; i < len; i++) {
                    if (i < dayCount) {
                        result.push('-');
                        continue;
                    }
                    var sum = 0;
                    for (var j = 0; j < dayCount; j++) {
                        sum += +data0.values[i - j][1];
                    }
                    result.push(sum / dayCount);
                }
                return result;
            }
            option = {
                title: {
                    text: '上证指数',
                    left: 0
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross'
                    }
                },
                legend: {
                    data: ['日K', 'MA5', 'MA10', 'MA20', 'MA30']
                },
                grid: {
                    left: '10%',
                    right: '10%',
                    bottom: '15%'
                },
                xAxis: {
                    type: 'category',
                    data: data0.categoryData,
                    boundaryGap: false,
                    axisLine: { onZero: false },
                    splitLine: { show: false },
                    min: 'dataMin',
                    max: 'dataMax',
                    textStyle: {
                      color: function(value, index) {
                        return compareDate(value)?"red":"#afafaf";
                      }
                    },
                    axisLine:{
					    lineStyle:{
					    	color:  function(value, index) {
                                return compareDate(value)?"red":"#afafaf";
                            }
					    }
				    }
                },
                yAxis: {
                    scale: true,
                    splitArea: {
                        show: true
                    }
                },
                dataZoom: [
                    {
                        type: 'inside',
                        start: 50,
                        end: 100
                    },
                    {
                        show: true,
                        type: 'slider',
                        top: '90%',
                        start: 50,
                        end: 100
                    }
                ],
                series: [
                    {
                        name: '日K',
                        type: 'candlestick',
                        data: data0.values,
                        itemStyle: {
                            color: upColor,
                            color0: downColor,
                            borderColor: upBorderColor,
                            borderColor0: downBorderColor
                        },
                        markPoint: {
                            label: {
                                formatter: function (param) {
                                    return param != null ? Math.round(param.value) + '' : '';
                                }
                            },
                            data: [
                                {
                                    name: 'Mark',
                                    coord: ['2013/5/31', 2300],
                                    value: 2300,
                                    itemStyle: {
                                        color: 'rgb(41,60,85)'
                                    }
                                },
                                {
                                    name: 'highest value',
                                    type: 'max',
                                    valueDim: 'highest'
                                },
                                {
                                    name: 'lowest value',
                                    type: 'min',
                                    valueDim: 'lowest'
                                },
                                {
                                    name: 'average value on close',
                                    type: 'average',
                                    valueDim: 'close'
                                }
                            ],
                            tooltip: {
                                formatter: function (param) {
                                    return param.name + '<br>' + (param.data.coord || '');
                                }
                            }
                        },
                        markLine: {
                            symbol: ['none', 'none'],
                            data: [
                                [
                                    {
                                        name: 'from lowest to highest',
                                        type: 'min',
                                        valueDim: 'lowest',
                                        symbol: 'circle',
                                        symbolSize: 10,
                                        label: {
                                            show: false
                                        },
                                        emphasis: {
                                            label: {
                                                show: false
                                            }
                                        }
                                    },
                                    {
                                        type: 'max',
                                        valueDim: 'highest',
                                        symbol: 'circle',
                                        symbolSize: 10,
                                        label: {
                                            show: false
                                        },
                                        emphasis: {
                                            label: {
                                                show: false
                                            }
                                        }
                                    }
                                ],
                                {
                                    name: 'min line on close',
                                    type: 'min',
                                    valueDim: 'close'
                                },
                                {
                                    name: 'max line on close',
                                    type: 'max',
                                    valueDim: 'close'
                                }
                            ]
                        }
                    },
                    {
                        name: 'MA5',
                        type: 'line',
                        data: calculateMA(5),
                        smooth: true,
                        lineStyle: {
                            opacity: 0.5
                        }
                    },
                    {
                        name: 'MA10',
                        type: 'line',
                        data: calculateMA(10),
                        smooth: true,
                        lineStyle: {
                            opacity: 0.5
                        }
                    },
                    {
                        name: 'MA20',
                        type: 'line',
                        data: calculateMA(20),
                        smooth: true,
                        lineStyle: {
                            opacity: 0.5
                        }
                    },
                    {
                        name: 'MA30',
                        type: 'line',
                        data: calculateMA(30),
                        smooth: true,
                        lineStyle: {
                            opacity: 0.5
                        }
                    }
                ]
            };

            option && myChart.setOption(option);
                }
            };
            // xmlhttp.open("GET", "http://113.54.228.171:6567/stock/singleData?tsCode="+ts_code, true);
            xmlhttp.open("GET", "http://127.0.0.1:6060/tsCode="+ts_code, true);
            xmlhttp.send();
        },500);
        });

    </script>
</head>
<body>
    <div id="main" style="width: 100%;height:980px;"></div>

</body>
</html>